import{e as n,h as a}from"/dist/chunk-scq2q67j.js";function e(){return a("div",{class:"markdown-body",children:a(n,{children:[a("h1",{children:"安装 wsl"},void 0,!1,void 0,this),`
`,a("p",{children:"windows——最好的 linux 发行版。"},void 0,!1,void 0,this),`
`,a("p",{children:"wsl，windows subsystem for linux，是 windows 上用于运行 linux 技术。wsl 有两个版本，wsl1 是模拟 linux 内核调用，wsl2 则是一种轻量化的虚拟机技术。现在主流是 wsl2，毕竟兼容性更好。至于性能，开发环境就不要首先考虑这个问题了。"},void 0,!1,void 0,this),`
`,a("p",{children:"下文中出现的 wsl，如果没有特别说明都是指 wsl2。"},void 0,!1,void 0,this),`
`,a("blockquote",{children:[`
`,a("p",{children:["【2023-04-14】我已经迁移到 ",a("a",{href:"https://github.com/mishamosher/RL-WSL",children:"Rocky9"},void 0,!1,void 0,this),"。Rocky 是 CentOS 联合创始人新建的 Linux 发行版，兼容 RHEL。使用 Rocky9 主要是兼容我项目的生产环境，对于 WSL，使用什么发行版基本上只是包管理器的区别。下面安装 Debian 的内容可以作为参考。"]},void 0,!0,void 0,this),`
`]},void 0,!0,void 0,this),`
`,a("h2",{children:"安装"},void 0,!1,void 0,this),`
`,a("p",{children:"在 windows 10 的某个版本开始提供了 wsl 支持。一直开启 windows 更新的 windows 10 系统应该可以正常开启 wsl 功能。"},void 0,!1,void 0,this),`
`,a("p",{children:["使用管理员方式打开的 powershell（按 win+x 也可以看入口），执行 ",a("code",{children:"wsl -l -v"},void 0,!1,void 0,this)," 命令，查看当前已经安装 linux 发行版。如果正确启用了 wsl 功能，这个命令应该可以正常使用。"]},void 0,!0,void 0,this),`
`,a("p",{children:"windows app store 可以直接安装 debian、ubuntu 最近的版本。如果你的网络好用的话，应该可以直接打开 windows app store。可惜，我这边不行。只能使用其他安装方式。另外就是，通过官方手段安装的 wsl 系统，全部安装的 C:/。"},void 0,!1,void 0,this),`
`,a("p",{children:"github 可以找到两个工具，wsldl、LxRunOffline，属于增强 wsl 的工具。两个工具我都试用了。最后选择了 wsldl。首先是 wsldl 提供了更方式的安装命令，二是有不少发行版直接使用 wsldl 来创建 wsl 的分支，可以直接下载使用。"},void 0,!1,void 0,this),`
`,a("p",{children:["LxRunOffline 默认安装的是 wsl 1，需要手工转换为 wsl2（有用户提了 issue，但 LxRunOffine 似乎有段时间没有发版本）；LxRunOffline 可以使用 lxc-images 安装。lxc-images 是 ",a("a",{href:"http://linuxcontainer.org",children:"linuxcontainer.org"},void 0,!1,void 0,this)," 构建的发行版镜像，而且默认集成了更多功能。"]},void 0,!0,void 0,this),`
`,a("p",{children:["lxc-images 可以在 ",a("a",{href:"https://mirrors.tuna.tsinghua.edu.cn/lxc-images/",children:"https://mirrors.tuna.tsinghua.edu.cn/lxc-images/"},void 0,!1,void 0,this)," 找到。"]},void 0,!0,void 0,this),`
`,a("p",{children:"我安装的 wsl 是使用 wsldl 安装的 Debian。"},void 0,!1,void 0,this),`
`,a("h3",{children:"使用 wsldl 安装 Debian"},void 0,!1,void 0,this),`
`,a("ol",{children:[`
`,a("li",{children:["在 ",a("a",{href:"https://github.com/yuk7/wsldl",children:"https://github.com/yuk7/wsldl"},void 0,!1,void 0,this)," 下载 wsldl.exe"]},void 0,!0,void 0,this),`
`,a("li",{children:"将下载回来的 wsldl.exe 命名为 Debian.exe。"},void 0,!1,void 0,this),`
`,a("li",{children:["从 ",a("a",{href:"https://docker.debian.net/",children:"https://docker.debian.net/"},void 0,!1,void 0,this)," 下载 debian 的 rootfs，我下载的 sid 分支。"]},void 0,!0,void 0,this),`
`]},void 0,!0,void 0,this),`
`,a("p",{children:"rootfs.tar.xz 下载地址："},void 0,!1,void 0,this),`
`,a("p",{children:a("a",{href:"https://raw.githubusercontent.com/debuerreotype/docker-debian-artifacts/6251ccd8060ae10b12bd881975cf37eee84ffbb0/sid/rootfs.tar.xz",children:"https://raw.githubusercontent.com/debuerreotype/docker-debian-artifacts/6251ccd8060ae10b12bd881975cf37eee84ffbb0/sid/rootfs.tar.xz"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,a("p",{children:["如果 ",a("a",{href:"http://raw.githubusercontent.com",children:"raw.githubusercontent.com"},void 0,!1,void 0,this)," 不能访问。可以尝试一下 github 的代理。"]},void 0,!0,void 0,this),`
`,a("p",{children:"rootfs 只包含了基本工具。连 ip、vi 命令都没有，需要在后面自行安装。"},void 0,!1,void 0,this),`
`,a("ol",{start:"4",children:[`
`,a("li",{children:"使用 7-zip 解压 rootfs.tar.xz，只需要解开 xz 压缩，得到 rootfs.tar。（wsldl 只支持 .tar 或 .tar.gz 的 rootfs）"},void 0,!1,void 0,this),`
`,a("li",{children:"将 rootfs.tar 和 Debian.exe 放置到同一目录下。比如："},void 0,!1,void 0,this),`
`]},void 0,!0,void 0,this),`
`,a("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:a("code",{className:"language-log",children:[a("span",{className:"line",children:[a("span",{style:{color:"#FFAB70"},children:"D"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:":/wsl/debian"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#E1E4E8"},children:"\t/-- "},void 0,!1,void 0,this),a("span",{style:{color:"#79B8FF"},children:"Deiban.exe"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#E1E4E8"},children:"\t/-- "},void 0,!1,void 0,this),a("span",{style:{color:"#79B8FF"},children:"rootfs.tar"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),`
`,a("ol",{start:"6",children:[`
`,a("li",{children:"执行 Debian.exe install 或双击 Debian.exe 便会进行安装。"},void 0,!1,void 0,this),`
`]},void 0,!0,void 0,this),`
`,a("p",{children:"待安装完成后，便得到一个非常轻量的 Debian 系统。"},void 0,!1,void 0,this),`
`,a("p",{children:["这里一个列表，",a("a",{href:"https://wsldl-pg.github.io/docs/Using-wsldl/#distros",children:"https://wsldl-pg.github.io/docs/Using-wsldl/#distros"},void 0,!1,void 0,this)," 罗列了使用 wsldl 包装的 linux 发行版。上面的列表包含了民间人士准备的各种 wsl 发布版。Linux 发行版选择一个自己习惯的就可以了。推荐 Ubuntu、Debian、Fedora 这些大众化的选择，其他小众一点的发行版也可以的。在 wsl 中主要就是包管理工具的区别了。我使用的是 Debian，因为习惯了 apt 工具，自家的服务器也使用 Debian。另一个原因是 Debian 在国内有比较好的源，安装软件比较快。"]},void 0,!0,void 0,this),`
`,a("h2",{children:"WSL 基本使用"},void 0,!1,void 0,this),`
`,a("p",{children:"wsl2 本质是一台虚拟机（VM）。在启用 wsl 支持后，可以得到 wsl 命令。"},void 0,!1,void 0,this),`
`,a("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:a("code",{className:"language-sh",children:[a("span",{className:"line",children:a("span",{style:{color:"#6A737D"},children:"# 列出系统中安装 linux 发布版"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#B392F0"},children:"wsl"},void 0,!1,void 0,this),a("span",{style:{color:"#79B8FF"},children:" -l"},void 0,!1,void 0,this),a("span",{style:{color:"#79B8FF"},children:" -v"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line"},void 0,!1,void 0,this),`
`,a("span",{className:"line",children:a("span",{style:{color:"#6A737D"},children:"# 使用指定的用户进入 wsl 系统"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,a("span",{className:"line",children:a("span",{style:{color:"#6A737D"},children:"# -d 是发行版名称，系统中可以安装多个 wsl 发行版"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#B392F0"},children:"wsl"},void 0,!1,void 0,this),a("span",{style:{color:"#79B8FF"},children:" -d"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" Debian"},void 0,!1,void 0,this),a("span",{style:{color:"#79B8FF"},children:" -u"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" feng"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#B392F0"},children:"wsl"},void 0,!1,void 0,this),a("span",{style:{color:"#79B8FF"},children:" -d"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" Debian"},void 0,!1,void 0,this),a("span",{style:{color:"#79B8FF"},children:" -u"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" root"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line"},void 0,!1,void 0,this),`
`,a("span",{className:"line",children:a("span",{style:{color:"#6A737D"},children:"# wsl 系统关机"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,a("span",{className:"line",children:a("span",{style:{color:"#6A737D"},children:"# 会关闭所有 wsl 虚拟机"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#B392F0"},children:"wsl"},void 0,!1,void 0,this),a("span",{style:{color:"#79B8FF"},children:" --shutdown"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),`
`,a("h2",{children:"配置"},void 0,!1,void 0,this),`
`,a("p",{children:"双击上面的 Debian.exe 就可以进行 Debain wsl。默认使用 root 用户登录系统。配置系统期间，可以直接使用 root 用户。"},void 0,!1,void 0,this),`
`,a("p",{children:"我在电脑上安装好 wsl 系统后，DNS 配置是有问题的。所以首先是修复 DNS 问题。"},void 0,!1,void 0,this),`
`,a("blockquote",{children:[`
`,a("p",{children:"【2023-04-14】迁移到 Rocky 之后，原来 Debian 版本的上遇到的问题减少了很多，比如没有 DNS 问题、没有无法访问网络的问题。"},void 0,!1,void 0,this),`
`]},void 0,!0,void 0,this),`
`,a("h3",{children:"设置 DNS nameserver"},void 0,!1,void 0,this),`
`,a("p",{children:"上面的方式安装的 Debian 发行版是一个基本系统，没有编辑器。"},void 0,!1,void 0,this),`
`,a("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:a("code",{className:"language-sh",children:[a("span",{className:"line",children:[a("span",{style:{color:"#B392F0"},children:"rm"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" /etc/resolv.conf"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#79B8FF"},children:"echo"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" nameserver"},void 0,!1,void 0,this),a("span",{style:{color:"#79B8FF"},children:" 223.5.5.5"},void 0,!1,void 0,this),a("span",{style:{color:"#F97583"},children:" >"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" /etc/resolv.conf"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),`
`,a("h3",{children:"设置软件源"},void 0,!1,void 0,this),`
`,a("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:a("code",{className:"language-sh",children:[a("span",{className:"line",children:[a("span",{style:{color:"#79B8FF"},children:"echo"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" deb"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" http://mirrors.tuna.tsinghua.edu.cn/debian/"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" sid"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" main"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" contrib"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" non-free"},void 0,!1,void 0,this),a("span",{style:{color:"#F97583"},children:" >"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" /etc/apt/sources.list"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line"},void 0,!1,void 0,this),`
`,a("span",{className:"line",children:a("span",{style:{color:"#6A737D"},children:"# 更新"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#B392F0"},children:"apt-get"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" update"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#B392F0"},children:"apt-get"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" dist-upgrade"},void 0,!1,void 0,this),a("span",{style:{color:"#6A737D"},children:" # 安装好系统后，先是一波全局更新。sid 是开发版，更新速度还是很快的。"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),`
`,a("h3",{children:"实用工具"},void 0,!1,void 0,this),`
`,a("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:a("code",{className:"language-sh",children:a("span",{className:"line",children:[a("span",{style:{color:"#B392F0"},children:"apt-get"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" install"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" iproute2"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" iputils-ping"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" locales"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" net-tools"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" openssh-client"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" procps"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" sudo"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" xz-utils"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" unzip"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,a("h3",{children:"locale-gen"},void 0,!1,void 0,this),`
`,a("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:a("code",{className:"language-sh",children:[a("span",{className:"line",children:a("span",{style:{color:"#6A737D"},children:"# 开启 en_US.UTF-8"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#B392F0"},children:"nano"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" /etc/locale.gen"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line",children:a("span",{style:{color:"#B392F0"},children:"locale-gen"},void 0,!1,void 0,this)},void 0,!1,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),`
`,a("h3",{children:"创建普通用户"},void 0,!1,void 0,this),`
`,a("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:a("code",{className:"language-sh",children:[a("span",{className:"line",children:a("span",{style:{color:"#6A737D"},children:"# 创建普通用户 feng"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#B392F0"},children:"useradd"},void 0,!1,void 0,this),a("span",{style:{color:"#79B8FF"},children:" -m"},void 0,!1,void 0,this),a("span",{style:{color:"#79B8FF"},children:" -G"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" adm,sudo"},void 0,!1,void 0,this),a("span",{style:{color:"#79B8FF"},children:" -s"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" /bin/bash"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" feng"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#B392F0"},children:"passwd"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" feng"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),`
`,a("p",{children:["将普通用户设置为默认用户：",a("code",{children:"Debian config --default-user feng"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("h3",{children:".env 文件"},void 0,!1,void 0,this),`
`,a("p",{children:".env 是我自定义一个环境文件。将常用的一些环境配置集中在一起。"},void 0,!1,void 0,this),`
`,a("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:a("code",{className:"language-sh",children:[a("span",{className:"line",children:[a("span",{style:{color:"#F97583"},children:"export"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" COLORTERM"},void 0,!1,void 0,this),a("span",{style:{color:"#F97583"},children:"="},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:"truecolor"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line"},void 0,!1,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#E1E4E8"},children:"PATH"},void 0,!1,void 0,this),a("span",{style:{color:"#F97583"},children:"="},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:"$PATH"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:":~/.local/bin"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#E1E4E8"},children:"PATH"},void 0,!1,void 0,this),a("span",{style:{color:"#F97583"},children:"="},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:"$PATH"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:":/opt/helix"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line"},void 0,!1,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#F97583"},children:"export"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" RUSTUP_DIST_SERVER"},void 0,!1,void 0,this),a("span",{style:{color:"#F97583"},children:"="},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:'"https://rsproxy.cn"'},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#F97583"},children:"export"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" RUSTUP_UPDATE_ROOT"},void 0,!1,void 0,this),a("span",{style:{color:"#F97583"},children:"="},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:'"https://rsproxy.cn/rustup"'},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#F97583"},children:"export"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" FNM_NODE_DIST_MIRROR"},void 0,!1,void 0,this),a("span",{style:{color:"#F97583"},children:"="},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:"https://mirrors.tuna.tsinghua.edu.cn/nodejs-release/"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line"},void 0,!1,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#79B8FF"},children:"eval"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:' "$('},void 0,!1,void 0,this),a("span",{style:{color:"#B392F0"},children:"starship"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:' init bash)"'},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#79B8FF"},children:"eval"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:' "$('},void 0,!1,void 0,this),a("span",{style:{color:"#B392F0"},children:"fnm"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:" env "},void 0,!1,void 0,this),a("span",{style:{color:"#79B8FF"},children:"--shell"},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:' bash)"'},void 0,!1,void 0,this)]},void 0,!0,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),`
`,a("p",{children:["在 ",a("code",{children:"~/.bashrc"},void 0,!1,void 0,this)," 增加一行："]},void 0,!0,void 0,this),`
`,a("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:a("code",{className:"language-log",children:a("span",{className:"line",children:a("span",{style:{color:"#E1E4E8"},children:". ~/.env"},void 0,!1,void 0,this)},void 0,!1,void 0,this)},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,a("p",{children:"重启 wsl 生效。"},void 0,!1,void 0,this),`
`,a("h3",{children:"设置文件系统 mask"},void 0,!1,void 0,this),`
`,a("p",{children:"设置文件系统 mask 可以让 ls 命令显示正常的颜色。在 /etc/wsl.conf 增加这些内容："},void 0,!1,void 0,this),`
`,a("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:a("code",{className:"language-ini",children:[a("span",{className:"line",children:a("span",{style:{color:"#B392F0"},children:"[automount]"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#F97583"},children:"enabled"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" = true"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#F97583"},children:"root"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" = /mnt/"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#F97583"},children:"options"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" = "},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:'"metadata,umask=22,fmask=111"'},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#F97583"},children:"mountFsTab"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" = true"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),`
`,a("h3",{children:"不加载 windows 系统 $PATH 路径"},void 0,!1,void 0,this),`
`,a("p",{children:"在 /etc/wsl.conf 增加："},void 0,!1,void 0,this),`
`,a("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:a("code",{className:"language-ini",children:[a("span",{className:"line",children:a("span",{style:{color:"#B392F0"},children:"[interop]"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#F97583"},children:"enabled"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" = false"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#F97583"},children:"appendWindowsPath"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" = false"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),`
`,a("h2",{children:"设置静态 ip"},void 0,!1,void 0,this),`
`,a("blockquote",{children:[`
`,a("p",{children:"【2023-04-14】如无必须，不应该设置静态 ip。"},void 0,!1,void 0,this),`
`]},void 0,!0,void 0,this),`
`,a("p",{children:"首先关闭 wsl 自动生成 resolv.conf 功能。在 /etc/wsl.conf 中增加："},void 0,!1,void 0,this),`
`,a("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:a("code",{className:"language-ini",children:[a("span",{className:"line",children:a("span",{style:{color:"#B392F0"},children:"[network]"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#F97583"},children:"generateResolvConf"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" = false"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),`
`,a("p",{children:"在系统中，增加一个脚本，用于配置 wsl 网络。比如叫 wsl_static_ip.cmd，内容如下："},void 0,!1,void 0,this),`
`,a("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:a("code",{className:"language-bat",children:[a("span",{className:"line",children:[a("span",{style:{color:"#F97583"},children:"wsl"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" -d Debian -u root ip addr "},void 0,!1,void 0,this),a("span",{style:{color:"#F97583"},children:"del"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" $(ip addr show eth0 "},void 0,!1,void 0,this),a("span",{style:{color:"#79B8FF"},children:"^"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:"| grep 'inet\\b' "},void 0,!1,void 0,this),a("span",{style:{color:"#79B8FF"},children:"^"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:"| awk '{print $2}' "},void 0,!1,void 0,this),a("span",{style:{color:"#79B8FF"},children:"^"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:"| head -n 1) dev eth0"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#F97583"},children:"wsl"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" -d Debian -u root ip addr add 192.168.50.2/24 broadcast 192.168.50.255 dev eth0"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#F97583"},children:"wsl"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" -d Debian -u root ip "},void 0,!1,void 0,this),a("span",{style:{color:"#F97583"},children:"route"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" add 0.0.0.0/0 via 192.168.50.1 dev eth0"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#F97583"},children:"wsl"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" -d Debian -u root "},void 0,!1,void 0,this),a("span",{style:{color:"#F97583"},children:"echo"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" nameserver 223.5.5.5 "},void 0,!1,void 0,this),a("span",{style:{color:"#79B8FF"},children:"^"},void 0,!1,void 0,this),a("span",{style:{color:"#F97583"},children:">"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" /etc/resolv.conf"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,a("span",{className:"line"},void 0,!1,void 0,this),`
`,a("span",{className:"line",children:[a("span",{style:{color:"#F97583"},children:"powershell"},void 0,!1,void 0,this),a("span",{style:{color:"#E1E4E8"},children:" -c "},void 0,!1,void 0,this),a("span",{style:{color:"#9ECBFF"},children:`"Get-NetAdapter 'vEthernet (WSL)' | Get-NetIPAddress | Remove-NetIPAddress -Confirm:$False; New-NetIPAddress -IPAddress 192.168.50.1 -PrefixLength 24 -InterfaceAlias 'vEthernet (WSL)'; Get-NetNat | ? Name -Eq WSLNat | Remove-NetNat -Confirm:$False; New-NetNat -Name WSLNat -InternalIPInterfaceAddressPrefix 192.168.50.0/24;"`},void 0,!1,void 0,this)]},void 0,!0,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),`
`,a("hr",{},void 0,!1,void 0,this),`
`,a("ul",{children:[`
`,a("li",{children:"2022-07-31 初稿"},void 0,!1,void 0,this),`
`,a("li",{children:"2023-04-14 增加「不加载 windows 系统 $PATH 路径」说明；更新 Rocky Linux 相关内容。"},void 0,!1,void 0,this),`
`]},void 0,!0,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this)}export{e as default};

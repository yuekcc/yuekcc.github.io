import{e as n,h as e}from"/dist/chunk-scq2q67j.js";function a(){return e("div",{class:"markdown-body",children:e(n,{children:[e("h1",{children:"编写 Shell 脚本"},void 0,!1,void 0,this),`
`,e("p",{children:`操作系统的人机交互接口可以分为 cli 和 gui。shell 是 cli 交互接口中的一个重要入口。shell 可以理解为一个解释器，
执行用户输入的指令，然后调用操作系统的功能调用外部的程序，或者直接执行内置指令。`},void 0,!1,void 0,this),`
`,e("p",{children:"bash 是 linux 里非常非常流行的一个 POSIX sh 实现。大部分 linux 发行版中都可以找到 bash 的身影。"},void 0,!1,void 0,this),`
`,e("p",{children:`linux/*bsd 中有非常多的 shell 软件。bash 是其中 linux 发行版中比较常见。其他有 csh、ksh、zsh、fish 等。
一般情况下这些 sh 都兼容 POSIX sh 规范，并且实现了自己的特色功能。`},void 0,!1,void 0,this),`
`,e("p",{children:`windows 上通过 git-for-windows 可以得到一个可用 bash。原味的 bash 只能 linux 中体验，因为有一些命令并没有包含 在
git-for-windows 的安装包中。`},void 0,!1,void 0,this),`
`,e("p",{children:"这篇文章主要是记录编写 shell 脚本的点点滴滴。"},void 0,!1,void 0,this),`
`,e("p",{children:"[TOC]"},void 0,!1,void 0,this),`
`,e("h2",{children:"执行脚本"},void 0,!1,void 0,this),`
`,e("p",{children:["最直接的启动方式是 ",e("code",{children:"bash script.sh"},void 0,!1,void 0,this)," 或者 ",e("code",{children:"sh script.sh"},void 0,!1,void 0,this),"。"]},void 0,!0,void 0,this),`
`,e("blockquote",{children:[`
`,e("p",{children:`有部分 Linux 发行版 bash 和 sh 是同一个软件。也有一些情况下 sh 是指 POSIX 的 sh 实现，这时就不能使用 bash
的一些拓展功能。一般情况项目的部署环境是比较固定，使用环境上对应的 shell 实现就可以了。`},void 0,!1,void 0,this),`
`]},void 0,!0,void 0,this),`
`,e("p",{children:["在脚本首行中加入 SharpBang（#!）配置，并设置为 ",e("code",{children:"+x"},void 0,!1,void 0,this)," 权限。shell 脚本也可以直接执行，如同一般的命令："]},void 0,!0,void 0,this),`
`,e("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:e("code",{className:"language-sh",children:[e("span",{className:"line",children:[e("span",{style:{color:"#B392F0"},children:"$"},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:" cat"},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:" demo"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,e("span",{className:"line",children:e("span",{style:{color:"#6A737D"},children:"#!/bin/bash"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,e("span",{className:"line"},void 0,!1,void 0,this),`
`,e("span",{className:"line",children:[e("span",{style:{color:"#79B8FF"},children:"echo"},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:" Hello"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,e("span",{className:"line"},void 0,!1,void 0,this),`
`,e("span",{className:"line",children:[e("span",{style:{color:"#B392F0"},children:"$"},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:" chmod"},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:" +x"},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:" demo"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,e("span",{className:"line",children:[e("span",{style:{color:"#B392F0"},children:"$"},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:" ./demo"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,e("span",{className:"line",children:e("span",{style:{color:"#B392F0"},children:"Hello"},void 0,!1,void 0,this)},void 0,!1,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),`
`,e("h2",{children:"导入其他脚本"},void 0,!1,void 0,this),`
`,e("p",{children:["需要导入其他脚本，可以在文件中写上 ",e("code",{children:". script.inc"},void 0,!1,void 0,this),"。",e("code",{children:"."},void 0,!1,void 0,this)," 是 ",e("code",{children:"source"},void 0,!1,void 0,this),` 命令的简写，前面的命令也可以写作
`,e("code",{children:"source script.inc"},void 0,!1,void 0,this),"。"]},void 0,!0,void 0,this),`
`,e("h2",{children:"编辑器"},void 0,!1,void 0,this),`
`,e("p",{children:["正经写 shell 脚本，就用 vscode 吧，插件可以使用 ",e("a",{href:"https://marketplace.visualstudio.com/items?itemName=foxundermoon.shell-format",children:"shell-format"},void 0,!1,void 0,this),` +
`,e("a",{href:"https://marketplace.visualstudio.com/items?itemName=timonwong.shellcheck",children:"shellcheck"},void 0,!1,void 0,this),"。"]},void 0,!0,void 0,this),`
`,e("p",{children:"shell-format 提供格式化功能，shellcheck 则提供 lint 功能。"},void 0,!1,void 0,this),`
`,e("p",{children:["如果在服务器上修改 shell 脚本。vim 是最常见的编辑器。下面是我使用的最基本的 ",e("code",{children:".vimrc"},void 0,!1,void 0,this),"："]},void 0,!0,void 0,this),`
`,e("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:e("code",{className:"language-vim",children:[e("span",{className:"line",children:[e("span",{style:{color:"#F97583"},children:"set"},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:" nu"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,e("span",{className:"line",children:[e("span",{style:{color:"#F97583"},children:"set"},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:" ai"},void 0,!1,void 0,this),e("span",{style:{color:"#F97583"},children:" #"},void 0,!1,void 0,this),e("span",{style:{color:"#E1E4E8"},children:" 自动换行"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,e("span",{className:"line",children:[e("span",{style:{color:"#F97583"},children:"set"},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:" si"},void 0,!1,void 0,this),e("span",{style:{color:"#F97583"},children:" #"},void 0,!1,void 0,this),e("span",{style:{color:"#E1E4E8"},children:" 智能缩进"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,e("span",{className:"line",children:[e("span",{style:{color:"#F97583"},children:"set"},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:" ts"},void 0,!1,void 0,this),e("span",{style:{color:"#F97583"},children:"="},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:"4"},void 0,!1,void 0,this),e("span",{style:{color:"#F97583"},children:" #"},void 0,!1,void 0,this),e("span",{style:{color:"#E1E4E8"},children:" tab"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,e("span",{className:"line",children:[e("span",{style:{color:"#F97583"},children:"set"},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:" sw"},void 0,!1,void 0,this),e("span",{style:{color:"#F97583"},children:"="},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:"4"},void 0,!1,void 0,this),e("span",{style:{color:"#F97583"},children:" #"},void 0,!1,void 0,this),e("span",{style:{color:"#E1E4E8"},children:" tab 的宽度为 "},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:"4"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,e("span",{className:"line",children:[e("span",{style:{color:"#F97583"},children:"set"},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:" et"},void 0,!1,void 0,this),e("span",{style:{color:"#F97583"},children:" #"},void 0,!1,void 0,this),e("span",{style:{color:"#E1E4E8"},children:" 使用空格代替 tab 符"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),`
`,e("p",{children:"或者使用 vim modeline，在文件第一行："},void 0,!1,void 0,this),`
`,e("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:e("code",{className:"language-sh",children:e("span",{className:"line",children:e("span",{style:{color:"#6A737D"},children:"# vim: set ai sw=4 et:"},void 0,!1,void 0,this)},void 0,!1,void 0,this)},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,e("p",{children:"shell 脚本是自带混淆的语言。想实现某些功能时，多问 google 吧。"},void 0,!1,void 0,this),`
`,e("h3",{children:"声明变量"},void 0,!1,void 0,this),`
`,e("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:e("code",{className:"language-sh",children:[e("span",{className:"line",children:[e("span",{style:{color:"#E1E4E8"},children:"VAR_NAME"},void 0,!1,void 0,this),e("span",{style:{color:"#F97583"},children:"="},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:'"something"'},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,e("span",{className:"line",children:[e("span",{style:{color:"#E1E4E8"},children:"VAR_NAME2"},void 0,!1,void 0,this),e("span",{style:{color:"#F97583"},children:"="},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:'"${'},void 0,!1,void 0,this),e("span",{style:{color:"#E1E4E8"},children:"VAR_NAME"},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:'}"'},void 0,!1,void 0,this)]},void 0,!0,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),`
`,e("p",{children:"sh 中的变量可以认为只能字符串一种类型。sh 支持字符串变量替换（也有变量展开）。下面这三种写法新创建的变量 VAR_NAME3 的值都是一样的："},void 0,!1,void 0,this),`
`,e("ul",{children:[`
`,e("li",{children:e("code",{children:'VAR_NAME3="${name}"'},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,e("li",{children:e("code",{children:'VAR_NAME3="$name"'},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,e("li",{children:e("code",{children:"VAR_NAME3=$name"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`]},void 0,!0,void 0,this),`
`,e("p",{children:["变量替换只有在 ",e("code",{children:'"..."'},void 0,!1,void 0,this)," 或不使用引用的情况下生效，如果使用了 ",e("code",{children:"'...'"},void 0,!1,void 0,this)," 则不会进行变量替换。"]},void 0,!0,void 0,this),`
`,e("p",{children:["如果使用了函数。声明变量，优先使用本地变量。通过 ",e("code",{children:'local VAR_NAME_X="something"'},void 0,!1,void 0,this)," 来声明一个本地变量。"]},void 0,!0,void 0,this),`
`,e("p",{children:["对于声明变量，有一点需要注意：",e("strong",{children:["在 ",e("code",{children:"="},void 0,!1,void 0,this)," 两边不能有空白"]},void 0,!0,void 0,this)]},void 0,!0,void 0,this),`
`,e("h3",{children:"特殊变量"},void 0,!1,void 0,this),`
`,e("p",{children:"shell 的函数或脚本中，有一组预定义变量来获取参数："},void 0,!1,void 0,this),`
`,e("ul",{children:[`
`,e("li",{children:[e("code",{children:"$1"},void 0,!1,void 0,this),"、",e("code",{children:"$2"},void 0,!1,void 0,this)," ... ",e("code",{children:"$1000"},void 0,!1,void 0,this)," 表示第一个、第二个、...第 1000 个参数"]},void 0,!0,void 0,this),`
`,e("li",{children:[e("code",{children:"$0"},void 0,!1,void 0,this)," 脚本的名字"]},void 0,!0,void 0,this),`
`,e("li",{children:[e("code",{children:"$@"},void 0,!1,void 0,this)," 所有参数"]},void 0,!0,void 0,this),`
`,e("li",{children:[e("code",{children:"$#"},void 0,!1,void 0,this)," 参数的数量"]},void 0,!0,void 0,this),`
`,e("li",{children:[e("code",{children:"$?"},void 0,!1,void 0,this)," 最后一个命令的返回值（0 表示正常退出，其他整数表示异常）"]},void 0,!0,void 0,this),`
`,e("li",{children:[e("code",{children:"$$"},void 0,!1,void 0,this)," 当前进程的 PID"]},void 0,!0,void 0,this),`
`,e("li",{children:[e("code",{children:"$(command)"},void 0,!1,void 0,this)," 执行 command 命令，并获取命令的输出结果"]},void 0,!0,void 0,this),`
`]},void 0,!0,void 0,this),`
`,e("h3",{children:"创建工作目录"},void 0,!1,void 0,this),`
`,e("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:e("code",{className:"language-sh",children:e("span",{className:"line",children:[e("span",{style:{color:"#B392F0"},children:"mkdir"},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:" -p"},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:" dir1/dir2/dir3"},void 0,!1,void 0,this),e("span",{style:{color:"#6A737D"},children:" # -p 在创建目录，会尝试创建路径中所有目录，如果已存在则忽略"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,e("h3",{children:"条件判断（test 命令）"},void 0,!1,void 0,this),`
`,e("p",{children:"写 shell 时，经常遇到的一类任务是判断某个文件或目录是否存在，然后执行某些命令。有两种实现方式："},void 0,!1,void 0,this),`
`,e("ol",{children:[`
`,e("li",{children:["调用 test 命令，通过 ",e("code",{children:"&&"},void 0,!1,void 0,this)," 或 ",e("code",{children:"||"},void 0,!1,void 0,this)," 串联命令"]},void 0,!0,void 0,this),`
`]},void 0,!0,void 0,this),`
`,e("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:e("code",{className:"language-sh",children:e("span",{className:"line",children:[e("span",{style:{color:"#79B8FF"},children:"test"},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:" -f"},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:" file_name"},void 0,!1,void 0,this),e("span",{style:{color:"#E1E4E8"},children:" && "},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:"echo"},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:" 1"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,e("p",{children:[e("code",{children:"&&"},void 0,!1,void 0,this)," 是命令结果逻辑与关系。如果第一个命令的执行结果是返回 ",e("code",{children:"0"},void 0,!1,void 0,this),`，则继续执行第二个命令。在 unix 中，约定命令执行成功返回 0 给操作系统。
shell 通过操作系统可以获取上一个命令的返回值。`]},void 0,!0,void 0,this),`
`,e("p",{children:[e("code",{children:"||"},void 0,!1,void 0,this)," 是命令结果的逻辑或关系。当左则的命令结果不等于 ",e("code",{children:"0"},void 0,!1,void 0,this)," 时，则继续执行右则的命令。"]},void 0,!0,void 0,this),`
`,e("ol",{start:"2",children:[`
`,e("li",{children:"if ... else ... fi 语句"},void 0,!1,void 0,this),`
`]},void 0,!0,void 0,this),`
`,e("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:e("code",{className:"language-sh",children:[e("span",{className:"line",children:[e("span",{style:{color:"#F97583"},children:"if"},void 0,!1,void 0,this),e("span",{style:{color:"#E1E4E8"},children:" [ "},void 0,!1,void 0,this),e("span",{style:{color:"#F97583"},children:"-f"},void 0,!1,void 0,this),e("span",{style:{color:"#E1E4E8"},children:" file_name ]; "},void 0,!1,void 0,this),e("span",{style:{color:"#F97583"},children:"then"},void 0,!1,void 0,this),e("span",{style:{color:"#6A737D"},children:" # `[ ]` 里的其实也是通过 test 命令判断的"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,e("span",{className:"line",children:[e("span",{style:{color:"#79B8FF"},children:"  echo"},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:" 1"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,e("span",{className:"line",children:e("span",{style:{color:"#F97583"},children:"else"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,e("span",{className:"line",children:[e("span",{style:{color:"#79B8FF"},children:"  echo"},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:" 0"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,e("span",{className:"line",children:e("span",{style:{color:"#F97583"},children:"fi"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,e("span",{className:"line"},void 0,!1,void 0,this),`
`,e("span",{className:"line",children:e("span",{style:{color:"#6A737D"},children:"# 多个条件"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,e("span",{className:"line",children:[e("span",{style:{color:"#F97583"},children:"if"},void 0,!1,void 0,this),e("span",{style:{color:"#E1E4E8"},children:" [ expr1 ] && [ expr2 ]; "},void 0,!1,void 0,this),e("span",{style:{color:"#F97583"},children:"then"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,e("span",{className:"line",children:e("span",{style:{color:"#6A737D"},children:"  #..."},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,e("span",{className:"line",children:e("span",{style:{color:"#F97583"},children:"else"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,e("span",{className:"line",children:e("span",{style:{color:"#6A737D"},children:"  #..."},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,e("span",{className:"line",children:e("span",{style:{color:"#F97583"},children:"fi"},void 0,!1,void 0,this)},void 0,!1,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),`
`,e("p",{children:e("strong",{children:"在 bash 中，有一些情况空白是有意义的！"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,e("p",{children:"test 命令的其他参数："},void 0,!1,void 0,this),`
`,e("table",{children:[e("thead",{children:e("tr",{children:[e("th",{children:"选项"},void 0,!1,void 0,this),e("th",{children:"功能"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),e("tbody",{children:[e("tr",{children:[e("td",{children:e("code",{children:"-s <file>"},void 0,!1,void 0,this)},void 0,!1,void 0,this),e("td",{children:"文件存还且大小大于零"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),e("tr",{children:[e("td",{children:e("code",{children:"-x <file>"},void 0,!1,void 0,this)},void 0,!1,void 0,this),e("td",{children:"文件存在且是可执行文件"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),e("tr",{children:[e("td",{children:e("code",{children:"-d <dir>"},void 0,!1,void 0,this)},void 0,!1,void 0,this),e("td",{children:"文件存在并且是一个目录"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),e("tr",{children:[e("td",{children:e("code",{children:"-e <file>"},void 0,!1,void 0,this)},void 0,!1,void 0,this),e("td",{children:"文件是否存在"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),e("tr",{children:[e("td",{children:e("code",{children:"-f <file>"},void 0,!1,void 0,this)},void 0,!1,void 0,this),e("td",{children:"文件存在并且是一个普通文件"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),e("tr",{children:[e("td",{children:e("code",{children:"-z <string>"},void 0,!1,void 0,this)},void 0,!1,void 0,this),e("td",{children:"字符串的长度是零"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),e("tr",{children:[e("td",{children:e("code",{children:"-n <string>"},void 0,!1,void 0,this)},void 0,!1,void 0,this),e("td",{children:"字符串的长度大于零"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),e("tr",{children:[e("td",{children:e("code",{children:"<string1> == <string2>"},void 0,!1,void 0,this)},void 0,!1,void 0,this),e("td",{children:"字符串是否相同"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),e("tr",{children:[e("td",{children:e("code",{children:"<string1> != <string2>"},void 0,!1,void 0,this)},void 0,!1,void 0,this),e("td",{children:"字符串不相等（相同）"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),e("tr",{children:[e("td",{children:e("code",{children:"<num1> -eq <num2>"},void 0,!1,void 0,this)},void 0,!1,void 0,this),e("td",{children:"数值比较，等于"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),e("tr",{children:[e("td",{children:e("code",{children:"<num1> -gt <num2>"},void 0,!1,void 0,this)},void 0,!1,void 0,this),e("td",{children:"数值比较，大于"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),e("tr",{children:[e("td",{children:e("code",{children:"<num1> -lt <num2>"},void 0,!1,void 0,this)},void 0,!1,void 0,this),e("td",{children:"数值比较，小于"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),e("tr",{children:[e("td",{children:e("code",{children:"<num1> -ge <num2>"},void 0,!1,void 0,this)},void 0,!1,void 0,this),e("td",{children:"数值比较，大于等于"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),e("tr",{children:[e("td",{children:e("code",{children:"<num1> -le <num2>"},void 0,!1,void 0,this)},void 0,!1,void 0,this),e("td",{children:"数值比较，小于等于"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)]},void 0,!0,void 0,this)]},void 0,!0,void 0,this),`
`,e("h3",{children:"查找 find"},void 0,!1,void 0,this),`
`,e("p",{children:["使用 ",e("code",{children:"find"},void 0,!1,void 0,this)," 可以查找文件或目录，并对搜索结果执行某些命令。"]},void 0,!0,void 0,this),`
`,e("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:e("code",{className:"language-sh",children:[e("span",{className:"line",children:e("span",{style:{color:"#6A737D"},children:"# 递归查找 ws 目录下，名为 file 的文件，并设置其文件权限"},void 0,!1,void 0,this)},void 0,!1,void 0,this),`
`,e("span",{className:"line",children:[e("span",{style:{color:"#B392F0"},children:"find"},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:" ws"},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:" -type"},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:" f"},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:" -name"},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:" file"},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:" -exec"},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:" chmod"},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:" a+r"},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:" {}"},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:" +"},void 0,!1,void 0,this),e("span",{style:{color:"#E1E4E8"},children:";"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),`
`,e("p",{children:"find 命令常用参数："},void 0,!1,void 0,this),`
`,e("table",{children:[e("thead",{children:e("tr",{children:[e("th",{children:"选项"},void 0,!1,void 0,this),e("th",{children:"功能"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),e("tbody",{children:[e("tr",{children:[e("td",{children:e("code",{children:"-type"},void 0,!1,void 0,this)},void 0,!1,void 0,this),e("td",{children:["指定文件类型，常用 ",e("code",{children:"f"},void 0,!1,void 0,this)," 表示文件，",e("code",{children:"d"},void 0,!1,void 0,this)," 表示目录"]},void 0,!0,void 0,this)]},void 0,!0,void 0,this),e("tr",{children:[e("td",{children:e("code",{children:"-name"},void 0,!1,void 0,this)},void 0,!1,void 0,this),e("td",{children:["搜索的文件名（支持 glob 匹配，如 ",e("code",{children:"*.md"},void 0,!1,void 0,this),"）"]},void 0,!0,void 0,this)]},void 0,!0,void 0,this),e("tr",{children:[e("td",{children:e("code",{children:"-empty"},void 0,!1,void 0,this)},void 0,!1,void 0,this),e("td",{children:"搜索空文件或空目录"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),e("tr",{children:[e("td",{children:e("code",{children:"-exec CMD +"},void 0,!1,void 0,this)},void 0,!1,void 0,this),e("td",{children:["对搜索结果执行某些操作。",e("code",{children:"-exec"},void 0,!1,void 0,this)," 需要使用 ",e("code",{children:";"},void 0,!1,void 0,this)," 或 ",e("code",{children:"+"},void 0,!1,void 0,this)," 结尾，表示命令结束。具体可以参见 ",e("a",{href:"https://github.com/koalaman/shellcheck/wiki/SC2067",children:"SC2067"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)]},void 0,!0,void 0,this)]},void 0,!0,void 0,this)]},void 0,!0,void 0,this),`
`,e("h3",{children:"异常处理"},void 0,!1,void 0,this),`
`,e("p",{children:["通过 set 命令，可以指令 shell 程序在出错时的处理方式。打开开关用 ",e("code",{children:"set -<flag>"},void 0,!1,void 0,this),"，关闭开关用 ",e("code",{children:"set +<flag>"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,e("pre",{className:"shiki github-dark",style:{backgroundColor:"#24292e",color:"#e1e4e8"},tabIndex:"0",children:e("code",{className:"language-sh",children:[e("span",{className:"line",children:[e("span",{style:{color:"#79B8FF"},children:"set"},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:" -e"},void 0,!1,void 0,this),e("span",{style:{color:"#6A737D"},children:" # 若指令传回值不等于 0，则立即退出 shell"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,e("span",{className:"line",children:[e("span",{style:{color:"#79B8FF"},children:"set"},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:" -o"},void 0,!1,void 0,this),e("span",{style:{color:"#9ECBFF"},children:" pipfail"},void 0,!1,void 0,this),e("span",{style:{color:"#6A737D"},children:" # 检查管道中的错误"},void 0,!1,void 0,this)]},void 0,!0,void 0,this),`
`,e("span",{className:"line",children:[e("span",{style:{color:"#79B8FF"},children:"set"},void 0,!1,void 0,this),e("span",{style:{color:"#79B8FF"},children:" -u"},void 0,!1,void 0,this),e("span",{style:{color:"#6A737D"},children:" # 当执行时使用到未定义过的变量，则显示错误信息"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this),`
`,e("p",{children:["打开 ",e("code",{children:"set -x"},void 0,!1,void 0,this),"，shell 会在执行命令时，先打印出命令，然后再执行。"]},void 0,!0,void 0,this),`
`,e("hr",{},void 0,!1,void 0,this),`
`,e("p",{children:"2021.11.21"},void 0,!1,void 0,this)]},void 0,!0,void 0,this)},void 0,!1,void 0,this)}export{a as default};
